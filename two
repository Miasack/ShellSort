package shellsort;

import java.util.Arrays;

public class ShellSort2{

/* Método                                                                                            |
|   Inicialmente a sequencia original é dividida em grupos(normalmente ao meio);                     |
|   O resultado dessa divisão é guardado em uma variável h;                                          |
|   Em seguida são aplicadas ordenações nos sub-grupos;                                              |
|   O valor de h vai ser dividido ao meio até que o valor seja unitário.                             |
|   Porque foi criado:                                                                               |
|   Ordenação por inserção só troca itens adjacentes para determinar o ponto de inserção.            |
|   São efetuadas n-1 comparações e movimentações quando o menor item está na última posição         |
|   Vantagens:                                                                                       |
|   Shellsort é uma ótima opção para arquivos de tamanho moderado.                                   |
|   Sua implementação é simples e requer uma quantidade de código pequena                            |
|   Desvantagens:                                                                                    |
|   O tempo de execução do algoritmo é sensível à ordem inicial do arquivo  O método não é estável  */

    public static void main(String []args){
        int[] a = {9,8,7,6,5,4,3,2,1};//Pode-se usar um gerador de números mais sofisticado
        System.out.println( Arrays.toString(a) );
        System.out.println( Arrays.toString(shellSort(a)) );
    }

    //Executa o sorteador em uma matriz de inteiros
    public static int[] shellSort(int[] array){
        int h = 1;
        while (h < array.length) h = 3*h + 1;
        while (h > 0){
            h = h/3;
            for (int k = 0; k < h; k++){
                for (int i = h+k; i < array.length; i+=h){
                    int key = array[i];
                    int j = i-h;
                    while (j>=0 && array[j] > key){
                        array[j+h] = array[j];
                        j-=h;
                    }
                    array[j+h] = key;
                    //-> Não varia: array[0,h,2*h..j] é sorteado
                }
            }
            //->Não varia: cada h sub array é classificado
        }
        return array;
    };
}
